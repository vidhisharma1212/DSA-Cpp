#include <iostream>
using namespace std;

class Node{
    public:
    int val;
    Node* next;
    
    Node(int data){
        val= data;
        next= NULL;
    }
};

void insertAtHead(Node* &head, int n){
    Node* new_node= new Node(n);
    new_node->next=head;
    head= new_node;
}

void insertAtEnd(Node* &head, int n){
    Node* temp= head;
    while(temp->next!=NULL){
        temp= temp->next;
    }
    
    //now we have temp at the desired position
    temp->next= new Node(n);
    
}

void display(Node* head){
    Node* temp= head;
    while(temp!=NULL){
        cout<<temp->val<<"->";
        temp= temp->next;
    }
    cout<<"NULL"<<endl;
    
}

void insertAtN(Node* &head, int n, int p){
    
    Node* temp= head;
    int pos=0;
        
    while(pos!=p-1){
        temp=temp->next;
        pos++;
    }
    Node* continue_node= temp->next;
    Node* new_node=new Node(n);
    temp->next= new_node;
    new_node->next = continue_node;
    
}

void updateAtN(Node* &head, int n, int p){
    
    Node* temp= head;
    int pos=0;
        
    while(pos!=p){
        temp=temp->next;
        pos++;
    }
    temp->val= n;
    
}

int main() {
    Node* n= new Node(2);
    insertAtHead(n, 0);
    insertAtHead(n, 1);
    display(n);
    insertAtEnd(n, 3);
    display(n);
    insertAtN(n, 8,2);
    display(n);
    updateAtN(n, 7,3);
    display(n);

    return 0;
}
